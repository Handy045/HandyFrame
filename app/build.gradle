apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    afterEvaluate {
        project.tasks.each { task ->
            if (task.name.startsWith('collect') && task.name.endsWith('MultiDexComponents')) {
                println "main-dex-filter: found task $task.name"
                task.filter { name, attrs ->
                    def componentName = attrs.get('android:name')
                    if ('activity' == name) {
                        println "main-dex-filter: skipping, detected activity [$componentName]"
                        return false
                    } else {
                        println "main-dex-filter: keeping, detected $name [$componentName]"
                        return true
                    }
                }
            }
        }
    }

    defaultConfig {
        multiDexEnabled true

        applicationId "com.handy.frame.app"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                // 注意此处有顺序要求
                arguments = [targetModuleName: getModuleName().replace("\"", "\'")]
                arguments = [eventBusIndex: 'com.handy.common.MyEventBusIndex']
            }
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'arm64-v8a', 'armeabi', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            buildConfigField "String", getModuleName(), "\"${getModuleName()}\""

            minifyEnabled false  // 混淆
            zipAlignEnabled true    // Zipalign优化
            shrinkResources false    // 移除无用的resource文件
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "String", getModuleName(), "\"${getModuleName()}\""

            minifyEnabled false  // 混淆
            zipAlignEnabled true    // Zipalign优化
            shrinkResources false    // 移除无用的resource文件
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                if (outputFileName.endsWith('.apk')) {
                    if (variant.buildType.name == 'debug') {
                        outputFileName = "${getModuleName()}_V${defaultConfig.versionName}_${releaseTime()}_Debug.apk"
                    } else if (variant.buildType.name == 'release') {
                        outputFileName = "${getModuleName()}_V${defaultConfig.versionName}_${releaseTime()}_Release.apk"
                    }
                }
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets/']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation project(path: ':library')
    annotationProcessor 'com.github.Raizlabs.DBFlow:dbflow-processor:4.2.4'
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.1.1'
}

/**
 * 获取当前Module名称
 */
static String getModuleName() {
    return "HandyFrameApp"
}

/**
 * 获取当前系统时间
 */
static def releaseTime() {
    String data = new Date().format("yyyy-MM-dd HH:mm", TimeZone.getTimeZone("GMT+08:00"))
    data = data.replace(":", "")
    data = data.replace("-", "")
    data = data.replace(" ", "")
    data = data.substring(2)
    return data
}